    import time
    from cv2 import cv2

# для начала нужно выполнить первое задание и забыть про картинку
# по моему первому варианту нужно перевести картинку в черно-белый вариант, что я и делаю

    def image_processing():
        img = cv2.imread('images/variant-1.jpg', cv2.IMREAD_GRAYSCALE)
        w, h = img.shape[:2]

        cv2.imshow('img', img)

# теперь начну редактирование видео, нужно описать отслеживание метки на видео и вывести квадратик, в котором она находится, и её координаты

    def video_processing():
        cap = cv2.VideoCapture(0)
        cap.set(3, 500)
        cap.set(4, 500)
        down_points = (640, 480)
        i = 0
        while True:
            ret, frame = cap.read()
            if not ret:
                break
# описываю, как выглядит отслеживаемый элемент

            frame = cv2.resize(frame, down_points, interpolation=cv2.INTER_LINEAR)
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
            gray = cv2.GaussianBlur(gray, (21, 21), 0)
            ret, thresh = cv2.threshold(gray, 110, 255, cv2.THRESH_BINARY_INV)
            
# теперь нужно настроить алгоритм, как будет квадратик цепляться за мою метку

            contours, hierarchy = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
            if len(contours) > 0:
                c = max(contours, key=cv2.contourArea)
                x, y, w, h = cv2.boundingRect(c)
                cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)
                
# теперь опишу, как найти координаты метки, чтобы вывести их на экран
                
                if i % 5 == 0:
                    a = x + (w // 2)
                    b = y + (h // 2)
                    print(a, b)

                cv2.putText(frame, str(a), (0, 30), cv2.FONT_HERSHEY_PLAIN, 1, (255, 0, 0), 1)
                cv2.putText(frame, str(b), (35, 30), cv2.FONT_HERSHEY_PLAIN, 1, (255, 0, 0), 1)

# теперь спокойно вывожу своё видео, настраивая, как его можно выключить и когда съемка начнётся снова

                cv2.imshow('frame', frame)
            if cv2.waitKey(1) & 0xFF == ord('q'):
                break

            time.sleep(0.1)
            i += 1

        cap.release()

# теперь можно запускать работу программы

    if __name__ == '__main__':
        image_processing()
        video_processing()

    cv2.waitKey(0)
    cv2.destroyAllWindows()
